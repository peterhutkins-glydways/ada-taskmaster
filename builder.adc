--   builder.adc
--   This is where we define all of the pragrams required for building an Ada executable.
--

--   The Ravenscar profile is a subset of the Ada concurrency facilities that supports determinism,
--   schedulability analysis, constrained memory utilization, and certification to the highest
--   integrity levels. Four distinct application domains are intended:
--      * hard real-time applications requiring predictability,
--      * safety-critical systems requiring formal, stringent certification,
--      * high-integrity applications requiring formal static analysis and verification,
--      * embedded applications requiring both a small memory footprint and low execution overhead.
--   See: https://ada-lang.io/docs/arm/AA-D/AA-D.13/
pragma Profile (Ravenscar);

--  Alternately, the Ravenscar profile can be broken into its constituent pragmas.
--  Experimentally, I have found that this is not 100% equivalent to "pragma Profile (Ravenscar)",
--  as there are other pragmas (e.g. "pragma Partition_Elaboration_Policy (Sequential)"); that
--  require a restricted profile like Ravenscar.
--
--  The following list constitutes the entirety of Ravenscar, broken into its constituent pragmas.
--  This is useful for testing against individual pragmas.
--  pragma Task_Dispatching_Policy(FIFO_Within_Priorities);
--  pragma Locking_Policy(Ceiling_Locking);
--  pragma Detect_Blocking;
--  pragma Restrictions(
--     No_Abort_Statements,
--     No_Asynchronous_Control,
--     No_Calendar,
--     No_Dynamic_Attachment,
--     No_Dynamic_Priorities,
--     No_Implicit_Heap_Allocations,
--     No_Local_Protected_Objects,
--     No_Protected_Type_Allocators,
--     No_Relative_Delay,
--     No_Requeue_Statements,
--     No_Select_Statements,
--     No_Task_Allocators,
--     No_Task_Attributes_Package,
--     No_Task_Hierarchy,
--     No_Task_Termination,
--     Simple_Barriers,
--     Max_Entry_Queue_Length => 1,
--     Max_Protected_Entries => 1,
--     Max_Task_Entries => 0
--  );
--

pragma Restrictions (
   No_Unrecognized_Aspects,   --   Disallow unrecognized aspects in "with" statement
   No_Unrecognized_Pragmas    --   Disallow unrecognized pragmas
);
